version: '2.4'

services:
  # Uncomment the service below to expose the socket on the network.
  # On balenaOS devices, this will probably be done by the OS and the
  # access controlled via the firewall
  # helios-api:
  #   build: ./
  #   image: helios
  #   command: socat TCP-LISTEN:80,reuseaddr,fork UNIX-CONNECT:/tmp/run/helios.sock
  #   ports:
  #     - 48484:80
  #   depends_on:
  #     - helios
  #   volumes:
  #     - runtime:/tmp/run
  #   healthcheck:
  #     test: ['CMD', 'wget', '-O', '-', '-q', 'http://127.0.0.1/v3/ping']

  helios:
    build: ./
    image: helios
    restart: on-failure
    labels:
      # Needed to get access to supervisor api variables
      # and credentials
      io.balena.features.supervisor-api: '1'
      # Needed for access to DOCKER_HOST
      io.balena.features.balena-socket: '1'
      # Needed to stop the supervisor service
      io.balena.features.dbus: '1'
      # Needed to get access to the API credentials
      io.balena.features.balena-api: '1'
    environment:
      - DBUS_SYSTEM_BUS_ADDRESS=unix:path=/host/run/dbus/system_bus_socket
    volumes:
      # Base directory for app configuration and update locks
      - runtime:/tmp/run

volumes:
  runtime:
    driver: local
    driver_opts:
      type: none
      o: bind,X-mount.mkdir=0755
      # XXX: this directory needs to exist on the host
      # before mounting. X-mount.mkdir doesn't work everywhere
      # unfortunately (it doesn't on balenaOS)
      device: /tmp/balena-supervisor
