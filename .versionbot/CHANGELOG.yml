- commits:
    - subject: Use socket rather than host networking
      hash: 215e1d0d6285ac5636de7ef7dd8e8d945dfa5a40
      body: |
        This allows to remove the need for host networking by listening on
        /tmp/balena-supervisor/helios.sock by default (avoiding the clash with a
        supervisor running on port 48484) and allowing to optionally
        expose the socket to the network via socat (or other mechanism).
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Add configuration option to listen from Unix socket
      hash: 974a8d6eafc19b946f2bed287cd49f5d8aec0532
      body: |
        This updates the `--local-address` CLI option to accept either a
        `<IP>:<PORT>` pair or a path to a unix socket.

        The Unix socket option will be used by the containerized version of the
        service to avoid the need for host networking.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
  version: 0.4.0
  title: ""
  date: 2025-07-16T18:41:14.316Z
- commits:
    - subject: Make state endpoint request helpers private to remote module
      hash: 78f4f73eaf82661053545066bbf6082f760ee287
      body: >
        It was previously tempting to either try to use Get/Patch directly as
        general request helpers, or add unrelated functionality (like we did by
        adding `make_uri` et al) to the request module.


        This moves request as a private submodule of remote, being its sole
        client/user.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.3.5
  title: ""
  date: 2025-07-16T16:35:11.413Z
- commits:
    - subject: Streamline CLI and config loading
      hash: 29c0442b7e29e0ee44e1b5a4cebac63525fa81b7
      body: >
        This basically makes Config completely inert and moves responsibility
        for congiuration to the primary (and currently *only*) entry point — the
        CLI.


        It also streamlines command handling — the CLI only defines the
        necessary arguments and main() dispatches the command using this input.


        It also does a bit of clean up by making some things that shouldn’t be
        exported private and reduces imports.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.3.4
  title: ""
  date: 2025-07-16T15:28:23.605Z
- commits:
    - subject: Streamline update options
      hash: 3aefcec8e822ffc43d88c83a8f814922be3eee27
      body: >
        Moves the update options struct to where it belongs: the target state
        main loop.


        This has the following effects:


        - Fallback now doesn’t have crate dependencies at all (besides
        `request`) which isolates it even more and makes it trivial to delete in
        the future.

        - More importantly, when update options are added or deleted, there’s
        only one place to define them (previously, UpdateRequest had its own set
        of options that were separate, and we transformed back and forth between
        those and UpdateOpts)
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.3.3
  title: ""
  date: 2025-07-15T13:53:45.086Z
- commits:
    - subject: Fix intrumentation call hierarchy
      hash: 2d8f8a899ff55647acc73ed55c11aeef461e241b
      body: |
        The changes in 5708472c3f0f9bcd11e7bc1954b8362ba788b7d3 messed with the
        hierarchy of calls shown in the logs. This fixes that issue
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.3.2
  title: ""
  date: 2025-07-14T21:40:13.486Z
- commits:
    - subject: Fix the reset_interval function on the request module
      hash: 5e82890eb29eaaf2e94b0c8b5c349ca61ea83b8b
      body: |
        The function is meant to ensure that the next request doesn't happen
        before the min_interval even if the future is dropped, but it was
        re-setting the backoff timer instead.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Improve instrumentation of poll_remote/send_report functions
      hash: 5708472c3f0f9bcd11e7bc1954b8362ba788b7d3
      body: |
        We don't really want to log every time the function is called as that
        doesn't provide useful information when running in unmanaged mode.

        Instead we want to enter the relevant span when initializing the actual
        API call.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.3.1
  title: ""
  date: 2025-07-14T19:39:19.161Z
- commits:
    - subject: Add target apply endpoints
      hash: 34f497081b14ae6e9afdbc59f49fd0f4c2303c5f
      body: |
        Adds `POST /v3/device` to set the device target state, `GET
        /v3/device/apps/{uuid}` to get the current state of an individual app,
        `POST /v3/device/apps/{uuid}` to set the target of an individual app
        and `GET /v3/status` to get the target state apply status

        This also adds some tasks to initialize the in memory state of apps and
        config coming from the API.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Set-up integration tests
      hash: b12d228555efb066ade97331c1aa6636bd8dd52d
      body: |
        This sets up docker-compose.test.yml to run tests for the API

        We use an `integration/` folder rather than `tests/` to control the
        dependendencies used by the tests and reduce compilation time.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Create GET /v3/device API endpoint
      hash: b67b9c56fa118897fbf5add574ba513e41353952
      body: |
        This endpoint allows to read the device state from the API
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Fix early exit in scripts/start-supervisor.sh
      hash: 0301d7a1934158090fade12a96f904e22e61a5c6
      body: |
        The script was exiting if supervisor were not found causing start.sh to
        exit as well.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.3.0
  title: ""
  date: 2025-07-14T16:42:11.924Z
- commits:
    - subject: Remove the need for legacy db volume
      hash: 3e54147babfe700b80c80bd84e70b245dea0187b
      body: |
        Using the old mechanism is not robust enough as the supervisor could be
        running on a older OS still with the old `resin-supervisor` directory or
        service name. The legacy volume also interferes with local testing on
        some platforms.

        The new mechanism uses the docker CLI and the existing supervisor image
        to write to the database using JavaScript.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Configure startup based on variable availability
      hash: 5df4fa8fb5b734b4c85e75282bc194e755f41a0f
      body: |
        This allows the docker service to be run in multiple contexts, including
        unmanaged or without a fallback supervisor.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.10
  title: ""
  date: 2025-07-11T15:47:22.867Z
- commits:
    - subject: Drop `hyper` and related dependencies
      hash: 8da84ac6347c257b85da0f61f07f94af9e3940f4
      body: >
        Remove direct dependency on Hyper and switch to Reqwest for network
        requests everywhere.


        Also normalize a few imports to get them from `axum`.


        Also drop `async-trait` as it was unused.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.2.9
  title: ""
  date: 2025-07-10T15:53:17.808Z
- commits:
    - subject: Separate remote handling code from target state handling
      hash: a7cbab71a02665457e5b17b6eda93d2a7f50eb13
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Drop `anyhow` dep and perform actual error handling/propagation
      hash: 349157836e4b66cf9b52c3f3775bfda35f45b5a0
      body: >
        `anyhow` allows basically to ignore errors and have everything bubble up
        implicitly. That’s something a critical piece of software shouldn’t do,
        but instead handle (or at least acknowledge) errors explicitly.


        The library otherwise provides marginal utility (`with_context` looks
        useful), so I’m dropping it completely to remove the temptation to use
        it.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move a few things around
      hash: 99d5907bdf87534d816d28942996435eae108ac5
      body: |
        Less files, less imports, less inter-dependencies, less sharing
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.2.8
  title: ""
  date: 2025-07-10T13:59:19.017Z
- commits:
    - subject: Simplify start script
      hash: 141c288aff0c39983db8c502a1fb3194e1b15514
      body: |
        - Moves supervisor takeover code to scripts/supervisor-takeover.sh
        - Removes the need for reading from `/mnt/boot` by relying on supervisor
          variables
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.7
  title: ""
  date: 2025-07-08T19:40:37.621Z
- commits:
    - subject: Refactor tracing instrumentation
      hash: 62c348ab774e8eae2304197375bf26d1cd7582f7
      body: >
        Move low level information to `debug` and `trace` level, and just keep
        top level

        calls in `info` level
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Remove Overrides module
      hash: 296aadb90f931385072a47015d454a8a2987d62a
      body: >
        This module was created for implementing a sort of local
        mode/livepush/target state

        replacement, but is is not necessary yet until we know how we will

        implement those features.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.6
  title: ""
  date: 2025-07-07T20:58:33.298Z
- commits:
    - subject: Cleanup main loop
      hash: dce5362ff809cf2d19a9a74148e489463d7abc89
      body: |
        This avoids nested looping and makes sure there is only one loop that
        can react to different events during the supervisor state
        poll/apply/report loop.
      footer:
        Change-type: patch
        change-type: patch
        Depends-on: balena-io-modules/mahler#36
        depends-on: balena-io-modules/mahler#36
      author: Felipe Lalanne
      nested: []
    - subject: Refactor code
      hash: 7be5de5e37256e2355997b73e7d67acdb6d4db0d
      body: |
        Moves commands implementation to `cmd/` directory and gets rid of some
        unused code.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Wait for legacy update to settle before continuing poll loop
      hash: b98769110bda643e6fa1c78836d247491a5a98e7
      body: |
        The new supervisor and old supervisor cannot be applying target state
        at the same time. Once the state is applied by helios, it need to wait
        for the fallback update to finish before continuing.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Set-up mahler
      hash: e6d7c7f44e1e5d87a55cdf8eff491956c3a8a40e
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.5
  title: ""
  date: 2025-07-07T15:46:44.317Z
- commits:
    - subject: Remove unecessary module nesting
      hash: e4064d077a198e5004533e3000198a3e92fa5487
      body: |
        Also deletes unused files
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Refactor Supervisor API server
      hash: 855a85a0a34e23217a6187d4278b674b776e1de5
      body: >
        - Dropped shared state

        - Simplified API server and fallback code to not know anything about
        each other
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.2.4
  title: ""
  date: 2025-07-03T15:15:06.672Z
- commits:
    - subject: Refactor all fallback utils into its own module
      hash: 424bb2f8c610a44b880e968ef0ea5a3bfa3ce7fc
      body: |
        This removes the GlobalState (for now) and cleans up the API code
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.3
  title: ""
  date: 2025-07-01T01:44:42.399Z
- commits:
    - subject: Move caching fields from RequestState to Get struct
      hash: bb7ac8e84cbedfddfff8e8a858cb1a851160fe46
      body: >
        Move cached_state and etag fields from shared RequestState to Get struct

        since they are only used by GET requests for ETag-based caching:


        - Remove cached_state and etag from RequestState

        - Add cached_state and etag fields to Get struct

        - Rename cached_state to cached

        - Update Get::new() to initialize new caching fields

        - Update try_get() method to use local caching fields instead of
        RequestState


        This reduces memory usage for Patch instances and makes the separation

        of concerns clearer between generic request state and GET-specific
        caching.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Simplify Patch struct to use blocking interface like Get
      hash: fca0683b882e4304fbaa608d15bf4458bf103a70
      body: |
        Replace background task architecture with synchronous blocking pattern:
        - Remove async background task spawning and channel communication
        - Make patch() method require &mut self and block until completion
        - Use same retry loop pattern as Get struct with try_patch()
        - Remove PatchRequest future type and PatchError::Incomplete variant
        - Update all tests to use new blocking .await pattern
        - Remove batching and request replacement behavior

        This simplifies the API and makes Patch consistent with Get behavior.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.2
  title: ""
  date: 2025-06-30T23:26:57.584Z
- commits:
    - subject: Rename ghcr package to 'helios'
      hash: 5edae0feb86dac69b8769f537dad02b82d0a69b5
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.1
  title: ""
  date: 2025-06-30T21:42:59.886Z
- commits:
    - subject: Bind to local port before starting poll
      hash: 0e2bf3328fc84d70c847e68990df4866e94a1407
      body: |
        This prevents triggering a poll if the supervisor local port
        is taken.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Rename the project to Helios and update README
      hash: c20a62adf86bdf5a3c03edaf04dae5736d39b1ce
      body: |
        Do some additional configuration tweaks as well.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Simplify the main service loop
      hash: 84152451f7a57859d7a95beaa99e70761adde795
      body: |
        This removes UpdateService and moves the target state handling
        behavior to the main loop for simplicity.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Setup layered configuration approach
      hash: fa020ecdc89bc302beb4ae25564772437effabc6
      body: |
        Add layered configuration support, prioritizing command line arguments,
        then env vars then config.json in the system configuration
        directory, then defaults
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Handle /v1/update requests
      hash: a7b46d831c5f1795ecf757138eb5154da57040d0
      body: |
        The call now triggers a state poll and a subsequent notification to the
        fallback if defined
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Make remote api endpoint optional
      hash: 8793a589cd183ab80b91346bdba51aa7d80d98c6
      body: |
        No api endpoint is equivalent to unmanaged mode
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Make fallback address optional
      hash: fecb4ff1441044e5e57b3897201b49a3270ede85
      body: |
        Unsupported paths will return 404 if the fallback address is not defined
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Use Clap for parsing arguments and env vars
      hash: 08ab44de5bed9bc4fbef1521261ad12e9e493f41
      body: |
        This makes the binary more useful on its own without the need to run in
        a container.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
  version: 0.2.0
  title: ""
  date: 2025-06-30T20:58:21.199Z
- commits:
    - subject: Add target state overrides system
      hash: 1a0f59afa629b820fb35eaa374cf6ea23b123da2
      body: |
        Implement app-specific configuration overrides that read `override.json`
        files from /mnt/temp/apps/{app-uuid}/ and apply them to target state.
        Includes comprehensive test coverage and dependency injection for
        file system operations.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Implement target state caching and interception in proxy
      hash: b2b5b3c79d0e8d10ea8d34116bae3255439bdea2
      body: |
        Intercept /v3/device/{uuid}/state requests from legacy supervisor
        and serve from locally cached target state instead of proxying
        to remote API. Returns 503 with Retry-After: 15 when no target
        state is cached yet.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Add uplink service for target state polling
      hash: 2ac811d6f4f1317b52e2cc9f4d06d9b3aaebd9d9
      body: >
        Implement UplinkService that polls target state from the API and
        notifies

        subscribers of changes. Includes jitter for load balancing, manual fetch

        triggers, and comprehensive error handling.


        - Add rand dependency for jitter calculation

        - Create link module with uplink service implementation

        - Add max_jitter_delay_ms configuration option

        - Integrate uplink service into main application flow

        - Add extensive test coverage for polling, updates, and error scenarios
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Add HTTP client functionality
      hash: 264165166132c8d6a109aa95932bde219f426144
      body: |
        Introduce new request module with comprehensive HTTP client
        capabilities including GET/POST methods, JSON handling,
        error management, and timeout configuration. Add reqwest
        and related networking dependencies to support external
        API communication and data fetching operations.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Refactor configuration
      hash: 7512d558497e9bce0da3dcdfd305ee3e6e13169c
      body: |
        Add some configuration variables and organize the Config type in
        preparation for adding target state poll feature.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.1.0
  title: ""
  date: 2025-06-26T02:38:50.602Z
- commits:
    - subject: Refactor code and rename repository
      hash: 4f5bb07536d91a12c7fe5f7aa453c6c6efe60a92
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.0.3
  title: ""
  date: 2025-06-16T22:10:30.474Z
- commits:
    - subject: Setup flowzone
      hash: dc1a1b5ae91e36122d66867c0e5e127a2e2d04cf
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.0.2
  title: ""
  date: 2025-06-16T17:37:45.938Z
